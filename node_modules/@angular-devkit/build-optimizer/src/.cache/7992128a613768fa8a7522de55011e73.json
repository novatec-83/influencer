{"remainingRequest":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@swimlane/ngx-datatable/release/directives/visibility.directive.js","dependencies":[{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@swimlane/ngx-datatable/release/directives/visibility.directive.js","mtime":1499611568000},{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/cache-loader/dist/cjs.js","mtime":1549951013815},{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\n/**\n * Visibility Observer Directive\n *\n * Usage:\n *\n * \t\t<div\n * \t\t\tvisibilityObserver\n * \t\t\t(visible)=\"onVisible($event)\">\n * \t\t</div>\n *\n */\nvar VisibilityDirective = /*@__PURE__*/ (function () {\n    function VisibilityDirective(element, zone) {\n        this.element = element;\n        this.zone = zone;\n        this.isVisible = false;\n        this.visible = new core_1.EventEmitter();\n    }\n    VisibilityDirective.prototype.ngOnInit = function () {\n        this.runCheck();\n    };\n    VisibilityDirective.prototype.ngOnDestroy = function () {\n        clearTimeout(this.timeout);\n    };\n    VisibilityDirective.prototype.onVisibilityChange = function () {\n        var _this = this;\n        // trigger zone recalc for columns\n        this.zone.run(function () {\n            _this.isVisible = true;\n            _this.visible.emit(true);\n        });\n    };\n    VisibilityDirective.prototype.runCheck = function () {\n        var _this = this;\n        var check = function () {\n            // https://davidwalsh.name/offsetheight-visibility\n            var _a = _this.element.nativeElement, offsetHeight = _a.offsetHeight, offsetWidth = _a.offsetWidth;\n            if (offsetHeight && offsetWidth) {\n                clearTimeout(_this.timeout);\n                _this.onVisibilityChange();\n            }\n            else {\n                clearTimeout(_this.timeout);\n                _this.zone.runOutsideAngular(function () {\n                    _this.timeout = setTimeout(function () { return check(); }, 50);\n                });\n            }\n        };\n        setTimeout(function () { return check(); });\n    };\n    VisibilityDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: '[visibilityObserver]' },] },\n    ];\n    VisibilityDirective.propDecorators = {\n        'isVisible': [{ type: core_1.HostBinding, args: ['class.visible',] },],\n        'visible': [{ type: core_1.Output },],\n    };\n    return VisibilityDirective;\n}());\nexports.VisibilityDirective = VisibilityDirective;\n",null]}