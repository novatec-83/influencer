{"remainingRequest":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@swimlane/ngx-datatable/release/components/body/body-cell.component.js","dependencies":[{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@swimlane/ngx-datatable/release/components/body/body-cell.component.js","mtime":1499611568000},{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/cache-loader/dist/cjs.js","mtime":1549951013815},{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar utils_1 = require(\"../../utils\");\nvar types_1 = require(\"../../types\");\nvar DataTableBodyCellComponent = /*@__PURE__*/ (function () {\n    function DataTableBodyCellComponent(element) {\n        this.activate = new core_1.EventEmitter();\n        this.isFocused = false;\n        this.onCheckboxChangeFn = this.onCheckboxChange.bind(this);\n        this.activateFn = this.activate.emit.bind(this.activate);\n        this.element = element.nativeElement;\n    }\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"sorts\", {\n        get: function () {\n            return this._sorts;\n        },\n        set: function (val) {\n            this._sorts = val;\n            this.calcSortDir = this.calcSortDir(val);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"columnCssClasses\", {\n        get: function () {\n            var cls = 'datatable-body-cell';\n            if (this.column.cellClass) {\n                if (typeof this.column.cellClass === 'string') {\n                    cls += ' ' + this.column.cellClass;\n                }\n                else if (typeof this.column.cellClass === 'function') {\n                    var res = this.column.cellClass({\n                        row: this.row,\n                        column: this.column,\n                        value: this.value\n                    });\n                    if (typeof res === 'string') {\n                        cls += res;\n                    }\n                    else if (typeof res === 'object') {\n                        var keys = Object.keys(res);\n                        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                            var k = keys_1[_i];\n                            if (res[k] === true)\n                                cls += \" \" + k;\n                        }\n                    }\n                }\n            }\n            if (!this.sortDir)\n                cls += ' sort-active';\n            if (this.isFocused)\n                cls += ' active';\n            if (this.sortDir === types_1.SortDirection.asc)\n                cls += ' sort-asc';\n            if (this.sortDir === types_1.SortDirection.desc)\n                cls += ' sort-desc';\n            return cls;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"width\", {\n        get: function () {\n            return this.column.width;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"height\", {\n        get: function () {\n            var height = this.rowHeight;\n            if (isNaN(height))\n                return height;\n            return height + 'px';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DataTableBodyCellComponent.prototype, \"value\", {\n        get: function () {\n            if (!this.row || !this.column)\n                return '';\n            var val = this.column.$$valueGetter(this.row, this.column.prop);\n            var userPipe = this.column.pipe;\n            if (userPipe)\n                return userPipe.transform(val);\n            if (val !== undefined)\n                return val;\n            return '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DataTableBodyCellComponent.prototype.ngOnDestroy = function () {\n        if (this.cellTemplate) {\n            this.cellTemplate.clear();\n        }\n    };\n    DataTableBodyCellComponent.prototype.onFocus = function () {\n        this.isFocused = true;\n    };\n    DataTableBodyCellComponent.prototype.onBlur = function () {\n        this.isFocused = false;\n    };\n    DataTableBodyCellComponent.prototype.onClick = function (event) {\n        this.activate.emit({\n            type: 'click',\n            event: event,\n            row: this.row,\n            column: this.column,\n            value: this.value,\n            cellElement: this.element\n        });\n    };\n    DataTableBodyCellComponent.prototype.onDblClick = function (event) {\n        this.activate.emit({\n            type: 'dblclick',\n            event: event,\n            row: this.row,\n            column: this.column,\n            value: this.value,\n            cellElement: this.element\n        });\n    };\n    DataTableBodyCellComponent.prototype.onKeyDown = function (event) {\n        var keyCode = event.keyCode;\n        var isTargetCell = event.target === this.element;\n        var isAction = keyCode === utils_1.Keys.return ||\n            keyCode === utils_1.Keys.down ||\n            keyCode === utils_1.Keys.up ||\n            keyCode === utils_1.Keys.left ||\n            keyCode === utils_1.Keys.right;\n        if (isAction && isTargetCell) {\n            event.preventDefault();\n            event.stopPropagation();\n            this.activate.emit({\n                type: 'keydown',\n                event: event,\n                row: this.row,\n                column: this.column,\n                value: this.value,\n                cellElement: this.element\n            });\n        }\n    };\n    DataTableBodyCellComponent.prototype.onCheckboxChange = function (event) {\n        this.activate.emit({\n            type: 'checkbox',\n            event: event,\n            row: this.row,\n            column: this.column,\n            value: this.value,\n            cellElement: this.element\n        });\n    };\n    DataTableBodyCellComponent.prototype.calcSortDir = function (sorts) {\n        var _this = this;\n        if (!sorts)\n            return;\n        var sort = sorts.find(function (s) {\n            return s.prop === _this.column.prop;\n        });\n        if (sort)\n            return sort.dir;\n    };\n    DataTableBodyCellComponent.decorators = [\n        { type: core_1.Component, args: [{\n                    selector: 'datatable-body-cell',\n                    template: \"\\n    <div class=\\\"datatable-body-cell-label\\\">\\n      <label\\n        *ngIf=\\\"column.checkboxable\\\" \\n        class=\\\"datatable-checkbox\\\">\\n        <input \\n          type=\\\"checkbox\\\"\\n          [checked]=\\\"isSelected\\\"\\n          (click)=\\\"onCheckboxChange($event)\\\" \\n        />\\n      </label>\\n      <span\\n        *ngIf=\\\"!column.cellTemplate\\\"\\n        [title]=\\\"value\\\"\\n        [innerHTML]=\\\"value\\\">\\n      </span>\\n      <ng-template #cellTemplate\\n        *ngIf=\\\"column.cellTemplate\\\"\\n        [ngTemplateOutlet]=\\\"column.cellTemplate\\\"\\n        [ngOutletContext]=\\\"{\\n          value: value,\\n          row: row,\\n          column: column,\\n          isSelected: isSelected,\\n          onCheckboxChangeFn: onCheckboxChangeFn,\\n          activateFn: activateFn\\n        }\\\">\\n      </ng-template>\\n    </div>\\n  \",\n                    host: {\n                        class: 'datatable-body-cell'\n                    }\n                },] },\n    ];\n    DataTableBodyCellComponent.propDecorators = {\n        'row': [{ type: core_1.Input },],\n        'column': [{ type: core_1.Input },],\n        'rowHeight': [{ type: core_1.Input },],\n        'isSelected': [{ type: core_1.Input },],\n        'sorts': [{ type: core_1.Input },],\n        'activate': [{ type: core_1.Output },],\n        'cellTemplate': [{ type: core_1.ViewChild, args: ['cellTemplate', { read: core_1.ViewContainerRef },] },],\n        'columnCssClasses': [{ type: core_1.HostBinding, args: ['class',] },],\n        'width': [{ type: core_1.HostBinding, args: ['style.width.px',] },],\n        'height': [{ type: core_1.HostBinding, args: ['style.height',] },],\n        'onFocus': [{ type: core_1.HostListener, args: ['focus',] },],\n        'onBlur': [{ type: core_1.HostListener, args: ['blur',] },],\n        'onClick': [{ type: core_1.HostListener, args: ['click', ['$event'],] },],\n        'onDblClick': [{ type: core_1.HostListener, args: ['dblclick', ['$event'],] },],\n        'onKeyDown': [{ type: core_1.HostListener, args: ['keydown', ['$event'],] },],\n    };\n    return DataTableBodyCellComponent;\n}());\nexports.DataTableBodyCellComponent = DataTableBodyCellComponent;\n",null]}