{"remainingRequest":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@swimlane/ngx-charts/release/tree-map/tree-map-cell.component.js","dependencies":[{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@swimlane/ngx-charts/release/tree-map/tree-map-cell.component.js","mtime":1495471339000},{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/cache-loader/dist/cjs.js","mtime":1549951013815},{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, Output, EventEmitter, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { select } from 'd3-selection';\nimport { invertColor } from '../utils/color-utils';\nimport { trimLabel } from '../common/trim-label.helper';\nimport { id } from '../utils/id';\nvar TreeMapCellComponent = /*@__PURE__*/ (function () {\n    function TreeMapCellComponent(element, location) {\n        this.location = location;\n        this.gradient = false;\n        this.select = new EventEmitter();\n        this.initialized = false;\n        this.element = element.nativeElement;\n    }\n    TreeMapCellComponent.prototype.ngOnChanges = function () {\n        this.update();\n        var hasValue = this.data && typeof this.data.value !== 'undefined';\n        this.valueFormatting = this.valueFormatting || (function (cell) { return cell.value.toLocaleString(); });\n        var labelFormatting = this.labelFormatting || (function (cell) { return trimLabel(cell.label, 55); });\n        var cellData = {\n            data: this.data,\n            label: this.label,\n            value: this.value\n        };\n        this.formattedLabel = labelFormatting(cellData);\n        var pageUrl = this.location instanceof PathLocationStrategy\n            ? this.location.path()\n            : '';\n        this.gradientId = 'grad' + id().toString();\n        this.gradientUrl = \"url(\" + pageUrl + \"#\" + this.gradientId + \")\";\n        this.gradientStops = this.getGradientStops();\n    };\n    TreeMapCellComponent.prototype.update = function () {\n        if (this.initialized) {\n            this.animateToCurrentForm();\n        }\n        else {\n            this.loadAnimation();\n            this.initialized = true;\n        }\n    };\n    TreeMapCellComponent.prototype.loadAnimation = function () {\n        var node = select(this.element).select('.cell');\n        node\n            .attr('opacity', 0)\n            .attr('x', this.x)\n            .attr('y', this.y);\n        this.animateToCurrentForm();\n    };\n    TreeMapCellComponent.prototype.getTextColor = function () {\n        return invertColor(this.fill);\n    };\n    TreeMapCellComponent.prototype.animateToCurrentForm = function () {\n        var node = select(this.element).select('.cell');\n        node.transition().duration(750)\n            .attr('opacity', 1)\n            .attr('x', this.x)\n            .attr('y', this.y)\n            .attr('width', this.width)\n            .attr('height', this.height);\n    };\n    TreeMapCellComponent.prototype.onClick = function () {\n        this.select.emit({\n            name: this.label,\n            value: this.value\n        });\n    };\n    TreeMapCellComponent.prototype.getGradientStops = function () {\n        return [\n            {\n                offset: 0,\n                color: this.fill,\n                opacity: 0.3\n            },\n            {\n                offset: 100,\n                color: this.fill,\n                opacity: 1\n            }\n        ];\n    };\n    return TreeMapCellComponent;\n}());\nexport { TreeMapCellComponent };\n//# sourceMappingURL=tree-map-cell.component.js.map \n",null]}