{"remainingRequest":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@swimlane/ngx-datatable/release/utils/column-helper.js","dependencies":[{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@swimlane/ngx-datatable/release/utils/column-helper.js","mtime":1499611568000},{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/cache-loader/dist/cjs.js","mtime":1549951013815},{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar camel_case_1 = require(\"./camel-case\");\nvar id_1 = require(\"./id\");\nvar column_prop_getters_1 = require(\"./column-prop-getters\");\n/**\n * Sets the column defaults\n *\n * @export\n * @param {any[]} columns\n * @returns\n */\nfunction setColumnDefaults(columns) {\n    if (!columns)\n        return;\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n        var column = columns_1[_i];\n        if (!column.$$id) {\n            column.$$id = id_1.id();\n        }\n        // prop can be numeric; zero is valid not a missing prop\n        // translate name => prop\n        if (column.prop == null && column.name) {\n            column.prop = camel_case_1.camelCase(column.name);\n        }\n        if (!column.$$valueGetter) {\n            column.$$valueGetter = column_prop_getters_1.getterForProp(column.prop);\n        }\n        // format props if no name passed\n        if (column.prop != null && !column.name) {\n            column.name = camel_case_1.deCamelCase(String(column.prop));\n        }\n        if (!column.hasOwnProperty('resizeable')) {\n            column.resizeable = true;\n        }\n        if (!column.hasOwnProperty('sortable')) {\n            column.sortable = true;\n        }\n        if (!column.hasOwnProperty('draggable')) {\n            column.draggable = true;\n        }\n        if (!column.hasOwnProperty('canAutoResize')) {\n            column.canAutoResize = true;\n        }\n        if (!column.hasOwnProperty('width')) {\n            column.width = 150;\n        }\n    }\n}\nexports.setColumnDefaults = setColumnDefaults;\n/**\n * Translates templates definitions to objects\n *\n * @export\n * @param {DataTableColumnDirective[]} templates\n * @returns {any[]}\n */\nfunction translateTemplates(templates) {\n    var result = [];\n    for (var _i = 0, templates_1 = templates; _i < templates_1.length; _i++) {\n        var temp = templates_1[_i];\n        var col = {};\n        var props = Object.getOwnPropertyNames(temp);\n        for (var _a = 0, props_1 = props; _a < props_1.length; _a++) {\n            var prop = props_1[_a];\n            col[prop] = temp[prop];\n        }\n        if (temp.headerTemplate) {\n            col.headerTemplate = temp.headerTemplate;\n        }\n        if (temp.cellTemplate) {\n            col.cellTemplate = temp.cellTemplate;\n        }\n        result.push(col);\n    }\n    return result;\n}\nexports.translateTemplates = translateTemplates;\n//# sourceMappingURL=column-helper.js.map",null]}