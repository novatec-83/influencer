{"remainingRequest":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@swimlane/ngx-charts/release/bubble-chart/bubble-chart.utils.js","dependencies":[{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@swimlane/ngx-charts/release/bubble-chart/bubble-chart.utils.js","mtime":1495471339000},{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/cache-loader/dist/cjs.js","mtime":1549951013815},{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\nexport function getScaleType(values) {\n    var date = true;\n    var num = true;\n    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\n        var value = values_1[_i];\n        if (!isDate(value)) {\n            date = false;\n        }\n        if (typeof value !== 'number') {\n            num = false;\n        }\n    }\n    if (date)\n        return 'time';\n    if (num)\n        return 'linear';\n    return 'ordinal';\n}\nfunction isDate(value) {\n    if (value instanceof Date) {\n        return true;\n    }\n    return false;\n}\nexport function getDomain(values, scaleType, autoScale) {\n    var domain = [];\n    if (scaleType === 'time') {\n        var min = Math.min.apply(Math, values);\n        var max = Math.max.apply(Math, values);\n        domain = [min, max];\n    }\n    else if (scaleType === 'linear') {\n        values = values.map(function (v) { return Number(v); });\n        var min = Math.min.apply(Math, values);\n        var max = Math.max.apply(Math, values);\n        if (!autoScale) {\n            min = Math.min(0, min);\n        }\n        domain = [min, max];\n    }\n    else {\n        domain = values;\n    }\n    return domain;\n}\nexport function getScale(domain, range, scaleType, roundDomains) {\n    var scale;\n    if (scaleType === 'time') {\n        scale = scaleTime()\n            .range(range)\n            .domain(domain);\n    }\n    else if (scaleType === 'linear') {\n        scale = scaleLinear()\n            .range(range)\n            .domain(domain);\n        if (roundDomains) {\n            scale = scale.nice();\n        }\n    }\n    else if (scaleType === 'ordinal') {\n        scale = scalePoint()\n            .range([range[0], range[1]])\n            .domain(domain);\n    }\n    return scale;\n}\n//# sourceMappingURL=bubble-chart.utils.js.map",null]}