{"remainingRequest":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@swimlane/ngx-charts/release/gauge/gauge-arc.component.js","dependencies":[{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@swimlane/ngx-charts/release/gauge/gauge-arc.component.js","mtime":1495471598000},{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/cache-loader/dist/cjs.js","mtime":1549951013815},{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { formatLabel } from '../common/label.helper';\nvar GaugeArcComponent = /*@__PURE__*/ (function () {\n    function GaugeArcComponent() {\n        this.isActive = false;\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    GaugeArcComponent.prototype.tooltipText = function (arc) {\n        var label = formatLabel(arc.data.name);\n        var val;\n        if (this.valueFormatting) {\n            val = this.valueFormatting(arc.data.value);\n        }\n        else {\n            val = formatLabel(arc.data.value);\n        }\n        return \"\\n      <span class=\\\"tooltip-label\\\">\" + label + \"</span>\\n      <span class=\\\"tooltip-val\\\">\" + val + \"</span>\\n    \";\n    };\n    return GaugeArcComponent;\n}());\nexport { GaugeArcComponent };\n//# sourceMappingURL=gauge-arc.component.js.map \n",null]}