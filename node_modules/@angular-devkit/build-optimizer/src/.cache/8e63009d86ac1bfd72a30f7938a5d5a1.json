{"remainingRequest":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/angular-calendar/dist/esm/src/providers/calendarDateFormatter.provider.js","dependencies":[{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/angular-calendar/dist/esm/src/providers/calendarDateFormatter.provider.js","mtime":1494788451000},{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/cache-loader/dist/cjs.js","mtime":1549951013815},{"path":"/home/amjad/Downloads/influexai_Influencer_12_feb/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { CalendarNativeDateFormatter } from './calendarNativeDateFormatter.provider';\n/**\n * This class is responsible for all formatting of dates. There are 2 implementations available, the `CalendarNativeDateFormatter` (default) which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\n *\n * If you wish, you may override any of the defaults via angulars DI. For example:\n *\n * ```typescript\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\n *\n * class CustomDateFormatter extends CalendarDateFormatter {\n *\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\n *     return new Intl.DateTimeFormat(locale, {weekday: 'short'}).format(date); // use short week days\n *   }\n *\n * }\n *\n * // in your component that uses the calendar\n * providers: [{\n *   provide: CalendarDateFormatter,\n *   useClass: CustomDateFormatter\n * }]\n * ```\n */\nvar CalendarDateFormatter = /*@__PURE__*/ (function (_super) {\n    __extends(CalendarDateFormatter, _super);\n    function CalendarDateFormatter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return CalendarDateFormatter;\n}(CalendarNativeDateFormatter));\nexport { CalendarDateFormatter };\n//# sourceMappingURL=calendarDateFormatter.provider.js.map \n",null]}